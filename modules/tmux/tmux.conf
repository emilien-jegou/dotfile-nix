# Set base index
set-option -g renumber-windows on
set -g base-index 1
setw -g pane-base-index 1
setw -g remain-on-exit off

#set-option -g default-shell /usr/bin/zsh

# Set prefix as C-a
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# unbind time display (useless)
unbind t

# Automatically set window title and random other W options
set-window-option -g automatic-rename on
set-option -g set-titles on
set -g history-limit 50000

# Vim mode
set -g status-keys vi
set -g mode-keys vi

bind P paste-buffer
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle

# Allow mouse manipulation (resize/scroll/pane select/copy)
set -g mouse on

## Clipboard integration
# ctrl+c to send to clipboard
bind C-c run "tmux save-buffer - | xclip -i -sel clipboard"
# ctrl+v to paste from clipboard
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# Selection with mouse should copy to clipboard right away, in addition to the default action.
unbind -n -Tcopy-mode-vi MouseDragEnd1Pane
bind -Tcopy-mode-vi MouseDragEnd1Pane send -X copy-selection-and-cancel\; run "tmux save-buffer - | xclip -i -sel clipboard > /dev/null"

# Middle click to paste from the clipboard
unbind-key MouseDown2Pane
bind-key -n MouseDown2Pane run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer"

# Drag to re-order windows
bind-key -n MouseDrag1Status swap-window -t=

# Double click on the window list to open a new window
bind-key -n DoubleClick1Status new-window
# Window/Pane activity colors (bottom bar highlight)
set -g monitor-activity on

# Window/Pane manipulation actions
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

bind -n M-t new-window -c '#{pane_current_path}'
bind -n M-v split-window -h -c "#{pane_current_path}"
bind -n M-s split-window -v -c "#{pane_current_path}"
bind -n M-q confirm-before -p "kill-pane #W? (y/n)" kill-pane

# Switch pane
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9


bind-key -n M-w choose-session

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

bind-key -n M-l detach

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \ | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?|ranger|nvimpager)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h"  "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j"  "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k"  "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l"  "select-pane -R"
bind-key -n M-p if-shell "$is_vim" "send-keys M-p" "select-pane -l"
bind-key -T copy-mode-vi M-h select-pane -L
bind-key -T copy-mode-vi M-j select-pane -D
bind-key -T copy-mode-vi M-k select-pane -U
bind-key -T copy-mode-vi M-l select-pane -R
bind-key -T copy-mode-vi M-p select-pane -l

bind-key -n M-u swap-pane -U
bind-key -n M-p swap-pane -D

is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?|ranger|nvimpager)(diff)?$"'

bind-key -n M-H if-shell "$is_vim" "send-keys M-H" "resize-pane -L 10"
bind-key -n M-L if-shell "$is_vim" "send-keys M-L" "resize-pane -R 10"
bind-key -n M-K if-shell "$is_vim" "send-keys M-K" "resize-pane -U 5"
bind-key -n M-J if-shell "$is_vim" "send-keys M-J" "resize-pane -D 5"

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# No delay for escape key press
set -sg escape-time 0

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-logging'

# Statusbar appearance, generated my tmuxline.vim
set -g status-justify "left"
set -g status "on"
set -g status-left-length "100"
set -g status-bg "colour234"
set -g status-right-length "100"
setw -g window-status-separator ""
set -g status-left "#[fg=colour7,bg=colour14] #S #[fg=colour14,bg=colour234,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=colour238,bg=colour234,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238] %Y-%m-%d  %H:%M #[fg=colour14,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour7,bg=colour14] #h "
setw -g window-status-format "#[fg=colour3,bg=colour234] #I #[fg=colour3,bg=colour234] #W "
setw -g window-status-current-format "#[fg=colour234,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour255,bg=colour238] #I #[fg=colour255,bg=colour238] #W #[fg=colour238,bg=colour234,nobold,nounderscore,noitalics]"

set -g default-terminal "screen-256color"
set -sa terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'

